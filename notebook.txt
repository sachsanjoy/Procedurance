Sure, here's a Python script using the `openpyxl` library that reads an Excel file with three sheets, and then creates hyperlinks in the first column of the first sheet based on the headers in the third sheet:

```python
import openpyxl
from openpyxl.utils import get_column_letter

# Load the Excel file
file_path = 'path_to_your_excel_file.xlsx'
workbook = openpyxl.load_workbook(file_path)

# Get the sheets
sheet1 = workbook.worksheets[0]
sheet3 = workbook.worksheets[2]

# Create a dictionary to store headers from the third sheet as keys and their corresponding column letters as values
header_dict = {}
for col in sheet3.iter_cols(min_row=1, max_row=1, values_only=True):
    for i, header in enumerate(col, start=1):
        header_dict[header] = get_column_letter(i)

# Iterate through the first column of the first sheet
for row in sheet1.iter_rows(min_row=2, min_col=1, max_col=1, values_only=True):
    cell_value = row[0]
    if cell_value in header_dict:
        col_letter = header_dict[cell_value]
        hyperlink = f"#{sheet3.title}!{col_letter}1"  # Create a hyperlink to the matching cell in the third sheet
        sheet1.cell(row=row[0].row, column=1).hyperlink = hyperlink

# Save the modified workbook
modified_file_path = 'path_to_save_modified_excel_file.xlsx'
workbook.save(modified_file_path)
```

Make sure to replace `'path_to_your_excel_file.xlsx'` with the actual path to your Excel file and `'path_to_save_modified_excel_file.xlsx'` with the desired path to save the modified Excel file.

Also, you'll need to have the `openpyxl` library installed. If you haven't installed it already, you can do so using the following command:

```
pip install openpyxl
```